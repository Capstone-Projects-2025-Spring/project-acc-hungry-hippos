"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[7943],{58337:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>t,contentTitle:()=>c,default:()=>a,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var d=n(74848),i=n(28453);const r={sidebar_position:1,description:"Frontend API"},c="Frontend API",l={id:"api-specification/Frontend",title:"Frontend API",description:"Frontend API",source:"@site/docs/api-specification/Frontend.md",sourceDirName:"api-specification",slug:"/api-specification/Frontend",permalink:"/project-acc-hungry-hippos/docs/api-specification/Frontend",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-acc-hungry-hippos/edit/main/documentation/docs/api-specification/Frontend.md",tags:[],version:"current",lastUpdatedBy:"Kostandin Jorgji",sidebarPosition:1,frontMatter:{sidebar_position:1,description:"Frontend API"},sidebar:"docsSidebar",previous:{title:"API Specification",permalink:"/project-acc-hungry-hippos/docs/category/api-specification"},next:{title:"Backend API",permalink:"/project-acc-hungry-hippos/docs/api-specification/Backend"}},t={},o=[{value:"<code>interface AacInterfaceProps</code>",id:"interface-aacinterfaceprops",level:2},{value:"<code>onFoodSelected: (food: AacFood) =&gt; void</code>",id:"onfoodselected-food-aacfood--void",level:2},{value:"<code>const AacInterface: React.FC&lt;AacInterfaceProps&gt; = (</code>",id:"const-aacinterface-reactfcaacinterfaceprops--",level:2},{value:"<code>const [selectedFood, setSelectedFood] = React.useState&lt;AacFood | null&gt;(null)</code>",id:"const-selectedfood-setselectedfood--reactusestateaacfood--nullnull",level:2},{value:"<code>const [selectedCategory, setSelectedCategory] = React.useState&lt;string | null&gt;(null)</code>",id:"const-selectedcategory-setselectedcategory--reactusestatestring--nullnull",level:2},{value:"<code>const [isAudioPlaying, setIsAudioPlaying] = React.useState(false)</code>",id:"const-isaudioplaying-setisaudioplaying--reactusestatefalse",level:2},{value:"<code>const handleFoodClick = (food: AacFood) =&gt;</code>",id:"const-handlefoodclick--food-aacfood-",level:2},{value:"<code>audio.onerror = () =&gt;</code>",id:"audioonerror---",level:2},{value:"<code>const renderCategoryView = () =&gt;</code>",id:"const-rendercategoryview---",level:2},{value:"<code>const renderFoodsView = () =&gt;</code>",id:"const-renderfoodsview---",level:2},{value:"<code>return ( &lt;div className=&quot;aac-container&quot;&gt; &lt;div className=&quot;aac-device&quot;&gt; &lt;h1&gt; AAC Device &lt;</code>",id:"return--div-classnameaac-container-div-classnameaac-device-h1-aac-device-",level:2},{value:"<code>export interface AacFood</code>",id:"export-interface-aacfood",level:2},{value:"<code>export interface AacCategory</code>",id:"export-interface-aaccategory",level:2},{value:"<code>export interface AacData</code>",id:"export-interface-aacdata",level:2},{value:"<code>export const AAC_DATA: AacData = aacData as AacData</code>",id:"export-const-aac_data-aacdata--aacdata-as-aacdata",level:2},{value:"<code>class: Game extends Phaser.Scene</code>",id:"class-game-extends-phaserscene",level:2},{value:"Data Fields",id:"data-fields",level:2},{value:"Methods",id:"methods",level:2},{value:"<code>constructor()</code>",id:"constructor",level:3},{value:"<code>init(data)</code>",id:"initdata",level:3},{value:"<code>preload()</code>",id:"preload",level:3},{value:"<code>create()</code>",id:"create",level:3},{value:"<code>update()</code>",id:"update",level:3},{value:"Gameplay Methods",id:"gameplay-methods",level:2},{value:"<code>addPlayer(playerId: string, color?: string)</code>",id:"addplayerplayerid-string-color-string",level:3},{value:"<code>getEdgeCursors(edge, cursors)</code>",id:"getedgecursorsedge-cursors",level:3},{value:"<code>handlePointer(pointer)</code>",id:"handlepointerpointer",level:3},{value:"WebSocket Interaction",id:"websocket-interaction",level:2},{value:"<code>requestStartTimer()</code>",id:"requeststarttimer",level:3},{value:"<code>applyModeSettings(settings)</code>",id:"applymodesettingssettings",level:3},{value:"EventBus Integration",id:"eventbus-integration",level:2},{value:"<code>applyEffectToPlayer(userId, effect)</code>",id:"applyeffecttoplayeruserid-effect",level:3},{value:"<code>handleFruitCollision(playerId, fruit)</code>",id:"handlefruitcollisionplayerid-fruit",level:3},{value:"Food Management",id:"food-management",level:2},{value:"<code>setTargetFood(foodId, effect?)</code>",id:"settargetfoodfoodid-effect",level:3},{value:"<code>removeFoodByInstanceId(instanceId)</code>",id:"removefoodbyinstanceidinstanceid",level:3},{value:"<code>syncFoodState(serverFoods)</code>",id:"syncfoodstateserverfoods",level:3},{value:"Timer",id:"timer",level:2},{value:"<code>updateTimerUI(secondsLeft)</code>",id:"updatetimeruisecondsleft",level:3},{value:"<code>handleGameOver()</code>",id:"handlegameover",level:3},{value:"Utility",id:"utility",level:2},{value:"<code>getEdgeAssignments()</code>",id:"getedgeassignments",level:3},{value:"Overview",id:"overview",level:2},{value:"<code>currentActiveScene</code>",id:"currentactivescene",level:3},{value:"<strong>Ref Type: <code>IRefPhaserGame</code></strong>",id:"ref-type-irefphasergame",level:2},{value:"<strong>Local State (Inside Component)</strong>",id:"local-state-inside-component",level:2},{value:"<code>useLayoutEffect()</code>",id:"uselayouteffect",level:3},{value:"<code>useEffect()</code>",id:"useeffect",level:3},{value:"<code>return ( &lt;div id=&quot;game-container&quot; /&gt; )</code>",id:"return--div-idgame-container--",level:3},{value:"<code>LandingPage</code>",id:"landingpage",level:2},{value:"<code>const [code, setCode] = useState([&#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;, &#39;&#39;])</code>",id:"const-code-setcode--usestate----",level:3},{value:"<code>const inputsRef = useRef&lt;(HTMLInputElement | null)[]&gt;([])</code>",id:"const-inputsref--userefhtmlinputelement--null",level:3},{value:"<code>const [isValidCode, setIsValidCode] = useState(true)</code>",id:"const-isvalidcode-setisvalidcode--usestatetrue",level:3},{value:"<code>const handleStart = async () =&gt;</code>",id:"const-handlestart--async--",level:2},{value:"<code>const handleCreateGame = async () =&gt;</code>",id:"const-handlecreategame--async--",level:2},{value:"<code>const handleChange = (value: string, index: number) =&gt;</code>",id:"const-handlechange--value-string-index-number-",level:2},{value:"<code>const handleKeyDown = (e, index) =&gt;</code>",id:"const-handlekeydown--e-index-",level:2},{value:"<code>const handlePaste = (e) =&gt;</code>",id:"const-handlepaste--e-",level:2},{value:"<code>return (...)</code>",id:"return-",level:2},{value:"<code>ButtonClick</code> Component",id:"buttonclick-component",level:2},{value:"Usage",id:"usage",level:3},{value:"<code>interface ButtonClickProps</code>",id:"interface-buttonclickprops",level:2},{value:"<code>function ButtonClick({ text, onClick }: ButtonClickProps): JSX.Element</code>",id:"function-buttonclick-text-onclick--buttonclickprops-jsxelement",level:2},{value:"Data Fields",id:"data-fields-1",level:2},{value:"JOIN on MOUNT",id:"join-on-mount",level:2},{value:"<code>useEffect(() =&gt; {...}, [sessionId, userId, role])</code>",id:"useeffect---sessionid-userid-role",level:3},{value:"REMOTE PLAYER MOVEMENT SYNC",id:"remote-player-movement-sync",level:2},{value:"<code>useEffect(() =&gt; {...}, [lastMessage, userId, clearLastMessage])</code>",id:"useeffect---lastmessage-userid-clearlastmessage",level:3},{value:"GAME MODE BROADCAST",id:"game-mode-broadcast",level:2},{value:"<code>useEffect(() =&gt; {...}, [lastMessage, clearLastMessage])</code>",id:"useeffect---lastmessage-clearlastmessage",level:3},{value:"FOOD STATE SYNC",id:"food-state-sync",level:2},{value:"<code>useEffect(() =&gt; {...}, [lastMessage, clearLastMessage])</code>",id:"useeffect---lastmessage-clearlastmessage-1",level:3},{value:"FRUIT EATEN LOCAL (EMITTED FROM PHASER)",id:"fruit-eaten-local-emitted-from-phaser",level:2},{value:"<code>useEffect(() =&gt; {...}, [sendMessage, sessionId])</code>",id:"useeffect---sendmessage-sessionid",level:3},{value:"SCORE UPDATE BROADCAST (EVENTBUS)",id:"score-update-broadcast-eventbus",level:2},{value:"<code>useEffect(() =&gt; {...}, [])</code>",id:"useeffect---",level:3},{value:"TIMER UPDATE BROADCAST (EVENTBUS)",id:"timer-update-broadcast-eventbus",level:2},{value:"<code>useEffect(() =&gt; {...}, [])</code>",id:"useeffect----1",level:3},{value:"GAME OVER \u2192 VICTORY NAVIGATION",id:"game-over--victory-navigation",level:2},{value:"<code>useEffect(() =&gt; {...}, [navigate, sessionId, scores, connectedUsers])</code>",id:"useeffect---navigate-sessionid-scores-connectedusers",level:3},{value:"SET EDGE SYNC WITH BACKEND",id:"set-edge-sync-with-backend",level:2},{value:"<code>useEffect(() =&gt; {...}, [sendMessage, sessionId, userId, location.state?.role])</code>",id:"useeffect---sendmessage-sessionid-userid-locationstaterole",level:3}];function h(e){const s={br:"br",code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,i.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(s.h1,{id:"frontend-api",children:"Frontend API"}),"\n",(0,d.jsx)(s.h1,{id:"aac-interface",children:"AAC Interface"}),"\n",(0,d.jsx)(s.h2,{id:"interface-aacinterfaceprops",children:(0,d.jsx)(s.code,{children:"interface AacInterfaceProps"})}),"\n",(0,d.jsx)(s.p,{children:"Defines the props for the AacInterface component."}),"\n",(0,d.jsx)(s.h2,{id:"onfoodselected-food-aacfood--void",children:(0,d.jsx)(s.code,{children:"onFoodSelected: (food: AacFood) => void"})}),"\n",(0,d.jsx)(s.p,{children:"Callback function to handle food selection."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters:"})," ",(0,d.jsx)(s.code,{children:"food"})," \u2014 The selected food item."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns:"})," ",(0,d.jsx)(s.code,{children:"void"})," \u2014"]}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"const-aacinterface-reactfcaacinterfaceprops--",children:(0,d.jsx)(s.code,{children:"const AacInterface: React.FC<AacInterfaceProps> = ("})}),"\n",(0,d.jsx)(s.p,{children:"AacInterface component provides an interface for users to select foods and play associated audio clips."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters:"})," ",(0,d.jsx)(s.code,{children:"props"})," \u2014 ",(0,d.jsx)(s.code,{children:"AacInterfaceProps"})," \u2014 - The properties for the component."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns:"})," ",(0,d.jsx)(s.code,{children:"JSX.Element"})," \u2014 The rendered component."]}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"const-selectedfood-setselectedfood--reactusestateaacfood--nullnull",children:(0,d.jsx)(s.code,{children:"const [selectedFood, setSelectedFood] = React.useState<AacFood | null>(null)"})}),"\n",(0,d.jsx)(s.p,{children:"Tracks the most recently selected food item"}),"\n",(0,d.jsx)(s.h2,{id:"const-selectedcategory-setselectedcategory--reactusestatestring--nullnull",children:(0,d.jsx)(s.code,{children:"const [selectedCategory, setSelectedCategory] = React.useState<string | null>(null)"})}),"\n",(0,d.jsx)(s.p,{children:"Tracks the currently selected food category"}),"\n",(0,d.jsx)(s.h2,{id:"const-isaudioplaying-setisaudioplaying--reactusestatefalse",children:(0,d.jsx)(s.code,{children:"const [isAudioPlaying, setIsAudioPlaying] = React.useState(false)"})}),"\n",(0,d.jsx)(s.p,{children:"Tracks whether audio is currently playing"}),"\n",(0,d.jsx)(s.h2,{id:"const-handlefoodclick--food-aacfood-",children:(0,d.jsx)(s.code,{children:"const handleFoodClick = (food: AacFood) =>"})}),"\n",(0,d.jsx)(s.p,{children:"Handles the click event for a food item."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters:"})," ",(0,d.jsx)(s.code,{children:"food"})," \u2014 ",(0,d.jsx)(s.code,{children:"AacFood"})," \u2014 - The food item that was clicked."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns:"})," ",(0,d.jsx)(s.code,{children:"void"})," \u2014"]}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"audioonerror---",children:(0,d.jsx)(s.code,{children:"audio.onerror = () =>"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions:"})," function handles errors that may occur while playing the audio."]}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"const-rendercategoryview---",children:(0,d.jsx)(s.code,{children:"const renderCategoryView = () =>"})}),"\n",(0,d.jsx)(s.p,{children:"Renders the category view with buttons for each food category."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns:"})," ",(0,d.jsx)(s.code,{children:"JSX.Element"})," \u2014 The rendered category view."]}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"const-renderfoodsview---",children:(0,d.jsx)(s.code,{children:"const renderFoodsView = () =>"})}),"\n",(0,d.jsx)(s.p,{children:"Renders the foods view for the selected category."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns:"})," ",(0,d.jsx)(s.code,{children:"JSX.Elemen"})," \u2014 | null} The rendered foods view or null if no category is selected."]}),"\n"]}),"\n",(0,d.jsx)(s.h2,{id:"return--div-classnameaac-container-div-classnameaac-device-h1-aac-device-",children:(0,d.jsx)(s.code,{children:'return ( <div className="aac-container"> <div className="aac-device"> <h1> AAC Device <'})}),"\n",(0,d.jsx)(s.p,{children:"Renders the main AAC interface, including the selected food and category views."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns:"})," ",(0,d.jsx)(s.code,{children:"JSX.Element"})," \u2014 The rendered AAC interface."]}),"\n"]}),"\n",(0,d.jsx)(s.h1,{id:"foodsts",children:"Foods.ts"}),"\n",(0,d.jsx)(s.h2,{id:"export-interface-aacfood",children:(0,d.jsx)(s.code,{children:"export interface AacFood"})}),"\n",(0,d.jsx)(s.p,{children:"Defines the structure for a single food item in the AAC system."}),"\n",(0,d.jsx)(s.h2,{id:"export-interface-aaccategory",children:(0,d.jsx)(s.code,{children:"export interface AacCategory"})}),"\n",(0,d.jsx)(s.p,{children:"Defines the structure for a food category in the AAC system."}),"\n",(0,d.jsx)(s.h2,{id:"export-interface-aacdata",children:(0,d.jsx)(s.code,{children:"export interface AacData"})}),"\n",(0,d.jsx)(s.p,{children:"Defines the structure for the entire AAC data, which includes multiple categories."}),"\n",(0,d.jsx)(s.h2,{id:"export-const-aac_data-aacdata--aacdata-as-aacdata",children:(0,d.jsx)(s.code,{children:"export const AAC_DATA: AacData = aacData as AacData"})}),"\n",(0,d.jsx)(s.p,{children:"Exports the AAC data, which includes categories and their respective foods. This data is imported from a JSON file."}),"\n",(0,d.jsx)(s.h1,{id:"gamets",children:"Game.ts"}),"\n",(0,d.jsx)(s.h2,{id:"class-game-extends-phaserscene",children:(0,d.jsx)(s.code,{children:"class: Game extends Phaser.Scene"})}),"\n",(0,d.jsx)(s.h2,{id:"data-fields",children:"Data Fields"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Field"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Purpose"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"sessionId"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string"})}),(0,d.jsx)(s.td,{children:"Current WebSocket session ID"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"hippo"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Hippo | null"})}),(0,d.jsx)(s.td,{children:"Local player\u2019s hippo sprite"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"foods"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Phaser.Physics.Arcade.Group"})}),(0,d.jsx)(s.td,{children:"Group of all active food sprites"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"currentTargetFoodId"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string | null"})}),(0,d.jsx)(s.td,{children:"ID of food chosen by AAC user"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"currentTargetFoodEffect"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"AacVerb | null"})}),(0,d.jsx)(s.td,{children:"Active effect (burn, freeze, grow)"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"playerScores"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Record<string, number>"})}),(0,d.jsx)(s.td,{children:"Map of player scores"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"players"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Record<string, Hippo>"})}),(0,d.jsx)(s.td,{children:"Map of player IDs to hippo sprites"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"edgeAssignments"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Record<string, string>"})}),(0,d.jsx)(s.td,{children:"Screen edge (top, bottom, etc.) per player"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"availableEdges"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string[]"})}),(0,d.jsx)(s.td,{children:"Remaining edges available for assignment"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"cursors"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Phaser.Types.Input.Keyboard.CursorKeys"})}),(0,d.jsx)(s.td,{children:"Arrow key input"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"sendMessage"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"(msg: any) => void"})}),(0,d.jsx)(s.td,{children:"WebSocket message sender"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"localPlayerId"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string"})}),(0,d.jsx)(s.td,{children:"Current user\u2019s ID"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"usePointerControl"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"boolean"})}),(0,d.jsx)(s.td,{children:"Whether pointer dragging is active"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"isKeyboardActive"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"boolean"})}),(0,d.jsx)(s.td,{children:"Whether keyboard is being used"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"role"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string"})}),(0,d.jsx)(s.td,{children:'"Hippo Player", "Spectator", "AAC User"'})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"lastSentX/Y"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"number | null"})}),(0,d.jsx)(s.td,{children:"Last movement sync position"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"lastMoveSentAt"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"number"})}),(0,d.jsx)(s.td,{children:"Timestamp of last movement sent"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"modeSettings"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"ModeSettings"})}),(0,d.jsx)(s.td,{children:"Current game mode rules (fruitSpeed, penalties)"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"hasUserInteracted"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"boolean"})}),(0,d.jsx)(s.td,{children:"Used to hide swipe tutorial"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"swipeHint"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Phaser.GameObjects.Image | undefined"})}),(0,d.jsx)(s.td,{children:"Swipe hint image"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"timerText"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Phaser.GameObjects.Text"})}),(0,d.jsx)(s.td,{children:"Countdown timer UI"})]})]})]}),"\n",(0,d.jsx)(s.h2,{id:"methods",children:"Methods"}),"\n",(0,d.jsx)(s.h3,{id:"constructor",children:(0,d.jsx)(s.code,{children:"constructor()"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Initializes the Phaser scene with ID ",(0,d.jsx)(s.code,{children:'"Game"'}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": None"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Scene is registered with the Phaser runtime."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": ",(0,d.jsx)(s.code,{children:"Game"})," instance"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"initdata",children:(0,d.jsx)(s.code,{children:"init(data)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Initializes the scene with player/session/game mode info."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"data: { sendMessage, localPlayerId, sessionId, role, connectedUsers?, modeSettings? }"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Called from React before ",(0,d.jsx)(s.code,{children:"create()"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Internal state and players are set up."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"preload",children:(0,d.jsx)(s.code,{children:"preload()"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Loads images and assets into memory."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": None"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Images available to use in scene."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"create",children:(0,d.jsx)(s.code,{children:"create()"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Builds the game world, sets up input and listeners."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": ",(0,d.jsx)(s.code,{children:"preload()"})," must have been called."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Scene is active."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"update",children:(0,d.jsx)(s.code,{children:"update()"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Handles input, movement, and syncs positions."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": ",(0,d.jsx)(s.code,{children:"create()"})," must have been called."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Scene reflects latest state each frame."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": WebSocket send failure is caught and logged:","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"'[Game.update] Failed to send player movement'"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"gameplay-methods",children:"Gameplay Methods"}),"\n",(0,d.jsx)(s.h3,{id:"addplayerplayerid-string-color-string",children:(0,d.jsx)(s.code,{children:"addPlayer(playerId: string, color?: string)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Adds a new hippo to the scene at an available edge."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": ",(0,d.jsx)(s.code,{children:"connectedUsers"})," passed to ",(0,d.jsx)(s.code,{children:"init()"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Hippo sprite is visible and tracked"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"getedgecursorsedge-cursors",children:(0,d.jsx)(s.code,{children:"getEdgeCursors(edge, cursors)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Remaps arrow keys to match orientation of assigned edge."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"edge: Edge"})," -- assigned side of screen"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"cursors: CursorKeys"})," -- raw keyboard input"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": Remapped ",(0,d.jsx)(s.code,{children:"CursorKeys"})," object"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"handlepointerpointer",children:(0,d.jsx)(s.code,{children:"handlePointer(pointer)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Updates hippo position based on touch/mouse drag."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"pointer: Phaser.Input.Pointer"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Only runs for local Hippo Player"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Hippo target position is updated"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"websocket-interaction",children:"WebSocket Interaction"}),"\n",(0,d.jsx)(s.h3,{id:"requeststarttimer",children:(0,d.jsx)(s.code,{children:"requestStartTimer()"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Sends ",(0,d.jsx)(s.code,{children:'"START_TIMER"'})," message to backend"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Scene must be active"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Backend starts countdown"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"applymodesettingssettings",children:(0,d.jsx)(s.code,{children:"applyModeSettings(settings)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Updates game difficulty rules"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": ",(0,d.jsx)(s.code,{children:"settings: ModeSettings"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Called before game starts"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"eventbus-integration",children:"EventBus Integration"}),"\n",(0,d.jsx)(s.h3,{id:"applyeffecttoplayeruserid-effect",children:(0,d.jsx)(s.code,{children:"applyEffectToPlayer(userId, effect)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Applies freeze, grow, burn effect with tint to a hippo"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"userId: string"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"effect: AacVerb"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": ",(0,d.jsx)(s.code,{children:"effect"})," must be valid"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Visual and gameplay change applied"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"handlefruitcollisionplayerid-fruit",children:(0,d.jsx)(s.code,{children:"handleFruitCollision(playerId, fruit)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Triggered when a hippo touches fruit"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"playerId: string"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"fruit: GameObject"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Collision must occur"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Fruit disappears if correct"}),"\n",(0,d.jsx)(s.li,{children:"Score updated"}),"\n",(0,d.jsx)(s.li,{children:"Effects sent if enabled"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["WebSocket errors logged:","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"'[Game.handleFruitCollision] Error sending score update:'"})}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"food-management",children:"Food Management"}),"\n",(0,d.jsx)(s.h3,{id:"settargetfoodfoodid-effect",children:(0,d.jsx)(s.code,{children:"setTargetFood(foodId, effect?)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Marks a fruit as the AAC target."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"foodId: string"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"effect?: AacVerb | null"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"removefoodbyinstanceidinstanceid",children:(0,d.jsx)(s.code,{children:"removeFoodByInstanceId(instanceId)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Deletes a fruit from the screen."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"instanceId: string"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"syncfoodstateserverfoods",children:(0,d.jsx)(s.code,{children:"syncFoodState(serverFoods)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Matches client-side fruits to server state"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"serverFoods: FoodState[]"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Called on ",(0,d.jsx)(s.code,{children:"FOOD_STATE_UPDATE"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"timer",children:"Timer"}),"\n",(0,d.jsx)(s.h3,{id:"updatetimeruisecondsleft",children:(0,d.jsx)(s.code,{children:"updateTimerUI(secondsLeft)"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Changes on-screen timer text."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": ",(0,d.jsx)(s.code,{children:"secondsLeft: number"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h3,{id:"handlegameover",children:(0,d.jsx)(s.code,{children:"handleGameOver()"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),': Stops game and displays "Game Over" overlay']}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"utility",children:"Utility"}),"\n",(0,d.jsx)(s.h3,{id:"getedgeassignments",children:(0,d.jsx)(s.code,{children:"getEdgeAssignments()"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Returns mapping of players to their screen edges"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": ",(0,d.jsx)(s.code,{children:"Record<string, string>"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.h1,{id:"phasergametsx",children:"PhaserGame.tsx"}),"\n",(0,d.jsx)(s.h2,{id:"overview",children:"Overview"}),"\n",(0,d.jsx)(s.p,{children:"This is a React component that:"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Mounts and manages a Phaser game instance"}),"\n",(0,d.jsx)(s.li,{children:"Forwards access to the game and scene via a shared ref"}),"\n",(0,d.jsxs)(s.li,{children:["Responds to Phaser's ",(0,d.jsx)(s.code,{children:"'current-scene-ready'"})," event"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h3,{id:"currentactivescene",children:(0,d.jsx)(s.code,{children:"currentActiveScene"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Type"}),": ",(0,d.jsx)(s.code,{children:"(scene_instance: Phaser.Scene) => void"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": A callback function passed from the parent that receives the Phaser scene instance once it becomes ready."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"ref-type-irefphasergame",children:(0,d.jsxs)(s.strong,{children:["Ref Type: ",(0,d.jsx)(s.code,{children:"IRefPhaserGame"})]})}),"\n",(0,d.jsxs)(s.p,{children:["This is the object passed back to the parent through the forwarded ",(0,d.jsx)(s.code,{children:"ref"}),"."]}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Field"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Purpose"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"game"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Phaser.Game | null"})}),(0,d.jsxs)(s.td,{children:["The root Phaser game instance, created with ",(0,d.jsx)(s.code,{children:"StartGame()"})]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"scene"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Phaser.Scene | null"})}),(0,d.jsxs)(s.td,{children:["The current scene instance that is emitted by ",(0,d.jsx)(s.code,{children:"EventBus"})]})]})]})]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"local-state-inside-component",children:(0,d.jsx)(s.strong,{children:"Local State (Inside Component)"})}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Field"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Purpose"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"game"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"React.RefObject<Phaser.Game | null>"})}),(0,d.jsx)(s.td,{children:"Mutable reference to the Phaser game instance that doesn't change value when the component re-renders"})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"ref"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"React.ForwardedRef<IRefPhaserGame>"})}),(0,d.jsxs)(s.td,{children:["Exposes ",(0,d.jsx)(s.code,{children:"{ game, scene }"})," to parent via ",(0,d.jsx)(s.code,{children:"ref.current"})," or callback"]})]})]})]}),"\n",(0,d.jsx)(s.h3,{id:"uselayouteffect",children:(0,d.jsx)(s.code,{children:"useLayoutEffect()"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Creates the Phaser game instance on mount and destroys it on unmount."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": None directly (hook-based)."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Component must be mounted."}),"\n",(0,d.jsxs)(s.li,{children:["A container with ",(0,d.jsx)(s.code,{children:'id="game-container"'})," must exist in the DOM."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"game.current"})," is assigned a ",(0,d.jsx)(s.code,{children:"Phaser.Game"})," instance."]}),"\n",(0,d.jsxs)(s.li,{children:["The ",(0,d.jsx)(s.code,{children:"ref"})," receives ",(0,d.jsx)(s.code,{children:"{ game, scene: null }"}),"."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": A cleanup function that:","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["Destroys the game (",(0,d.jsx)(s.code,{children:"game.current.destroy(true)"}),")"]}),"\n",(0,d.jsxs)(s.li,{children:["Clears ",(0,d.jsx)(s.code,{children:"game.current"})," to ",(0,d.jsx)(s.code,{children:"null"}),"."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h3,{id:"useeffect",children:(0,d.jsx)(s.code,{children:"useEffect()"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Waits for ",(0,d.jsx)(s.code,{children:"'current-scene-ready'"})," from the Phaser game and:","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Injects AAC food keys into the scene"}),"\n",(0,d.jsxs)(s.li,{children:["Calls ",(0,d.jsx)(s.code,{children:"currentActiveScene(scene)"})," if provided"]}),"\n",(0,d.jsxs)(s.li,{children:["Updates the forwarded ",(0,d.jsx)(s.code,{children:"ref"})," with ",(0,d.jsx)(s.code,{children:"{ game, scene }"})]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": None directly (hook-based). Uses:","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"EventBus.on('current-scene-ready', scene_instance => ...)"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["Phaser game must emit ",(0,d.jsx)(s.code,{children:"EventBus"})," event ",(0,d.jsx)(s.code,{children:"'current-scene-ready'"})]}),"\n",(0,d.jsxs)(s.li,{children:["Scene must support ",(0,d.jsx)(s.code,{children:".setFoodKeys()"})," method (optional)"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Food keys are injected into the scene"}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"currentActiveScene(scene)"})," callback is executed"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"ref.current"})," is updated with the live ",(0,d.jsx)(s.code,{children:"scene"})," instance"]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": A cleanup function that removes the event listener:","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"EventBus.removeListener('current-scene-ready');"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h3,{id:"return--div-idgame-container--",children:(0,d.jsx)(s.code,{children:'return ( <div id="game-container" /> )'})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Renders a DOM element into which the Phaser game will mount its canvas."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Used by ",(0,d.jsx)(s.code,{children:'StartGame("game-container")'}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Post-conditions"}),": Phaser canvas is injected into this ",(0,d.jsx)(s.code,{children:"div"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": JSX element:","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:'<div id="game-container"></div>'})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h1,{id:"landingpagetsx",children:"LandingPage.tsx"}),"\n",(0,d.jsx)(s.h2,{id:"landingpage",children:(0,d.jsx)(s.code,{children:"LandingPage"})}),"\n",(0,d.jsxs)(s.p,{children:["Landing page interface for users to ",(0,d.jsx)(s.strong,{children:"enter a 5-character session code"})," or ",(0,d.jsx)(s.strong,{children:"create a new game session"}),"."]}),"\n",(0,d.jsx)(s.h3,{id:"const-code-setcode--usestate----",children:(0,d.jsx)(s.code,{children:"const [code, setCode] = useState(['', '', '', '', ''])"})}),"\n",(0,d.jsx)(s.p,{children:"Stores the user-entered game code across 5 input fields."}),"\n",(0,d.jsx)(s.h3,{id:"const-inputsref--userefhtmlinputelement--null",children:(0,d.jsx)(s.code,{children:"const inputsRef = useRef<(HTMLInputElement | null)[]>([])"})}),"\n",(0,d.jsx)(s.p,{children:"Holds references to individual input boxes for managing focus and input behavior."}),"\n",(0,d.jsx)(s.h3,{id:"const-isvalidcode-setisvalidcode--usestatetrue",children:(0,d.jsx)(s.code,{children:"const [isValidCode, setIsValidCode] = useState(true)"})}),"\n",(0,d.jsx)(s.p,{children:"Tracks whether the currently entered code is valid."}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"const-handlestart--async--",children:(0,d.jsx)(s.code,{children:"const handleStart = async () =>"})}),"\n",(0,d.jsx)(s.p,{children:"Validates the user-entered session code by calling the backend."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"If valid:"})," navigates to ",(0,d.jsx)(s.code,{children:"/GamePage"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"If invalid:"})," clears the inputs and focuses the first input box."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"const-handlecreategame--async--",children:(0,d.jsx)(s.code,{children:"const handleCreateGame = async () =>"})}),"\n",(0,d.jsx)(s.p,{children:"Sends a request to create a new session."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"If successful:"})," navigates to ",(0,d.jsx)(s.code,{children:"/GamePage"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"If failed:"})," alerts user and logs error."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"const-handlechange--value-string-index-number-",children:(0,d.jsx)(s.code,{children:"const handleChange = (value: string, index: number) =>"})}),"\n",(0,d.jsx)(s.p,{children:"Handles single-character input changes in session code inputs."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Converts input to uppercase."}),"\n",(0,d.jsx)(s.li,{children:"Automatically advances focus to the next box."}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"const-handlekeydown--e-index-",children:(0,d.jsx)(s.code,{children:"const handleKeyDown = (e, index) =>"})}),"\n",(0,d.jsx)(s.p,{children:"Handles backspace key behavior in the code inputs."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Moves focus backward if current input is empty."}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"const-handlepaste--e-",children:(0,d.jsx)(s.code,{children:"const handlePaste = (e) =>"})}),"\n",(0,d.jsx)(s.p,{children:"Allows user to paste the entire 5-character code."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:"Splits characters and fills all inputs."}),"\n",(0,d.jsx)(s.li,{children:"Automatically focuses the next available box."}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"return-",children:(0,d.jsx)(s.code,{children:"return (...)"})}),"\n",(0,d.jsx)(s.p,{children:"Renders the complete landing UI:"}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.strong,{children:"Logo"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.strong,{children:"Code input fields"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.strong,{children:"Create Game link"})}),"\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.strong,{children:"Join Game button"})}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h1,{id:"buttonclicktsx",children:"ButtonClick.tsx"}),"\n",(0,d.jsxs)(s.h2,{id:"buttonclick-component",children:[(0,d.jsx)(s.code,{children:"ButtonClick"})," Component"]}),"\n",(0,d.jsxs)(s.p,{children:["A ",(0,d.jsx)(s.strong,{children:"reusable styled button"})," component that executes a callback function when clicked."]}),"\n",(0,d.jsx)(s.h3,{id:"usage",children:"Usage"}),"\n",(0,d.jsx)(s.pre,{children:(0,d.jsx)(s.code,{className:"language-tsx",children:'<ButtonClick text="Join Game" onClick={handleStart} />\n'})}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"interface-buttonclickprops",children:(0,d.jsx)(s.code,{children:"interface ButtonClickProps"})}),"\n",(0,d.jsxs)(s.p,{children:["Props for the ",(0,d.jsx)(s.code,{children:"ButtonClick"})," component:"]}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"text: string"})," \u2014 The label text to display inside the button."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"onClick: () => void"})," \u2014 Callback function triggered when the button is clicked."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"function-buttonclick-text-onclick--buttonclickprops-jsxelement",children:(0,d.jsx)(s.code,{children:"function ButtonClick({ text, onClick }: ButtonClickProps): JSX.Element"})}),"\n",(0,d.jsx)(s.p,{children:"Renders the button with styles and binds the click event."}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:["\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.strong,{children:"Parameters:"}),(0,d.jsx)(s.br,{}),"\n",(0,d.jsx)(s.code,{children:"text"})," \u2014 Button label",(0,d.jsx)(s.br,{}),"\n",(0,d.jsx)(s.code,{children:"onClick"})," \u2014 Click handler"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:["\n",(0,d.jsxs)(s.p,{children:[(0,d.jsx)(s.strong,{children:"Returns:"}),(0,d.jsx)(s.br,{}),"\n",(0,d.jsx)(s.code,{children:"JSX.Element"})," \u2014 A styled button element"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h1,{id:"phaserpagetsx",children:"PhaserPage.tsx"}),"\n",(0,d.jsx)(s.h2,{id:"data-fields-1",children:"Data Fields"}),"\n",(0,d.jsxs)(s.table,{children:[(0,d.jsx)(s.thead,{children:(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.th,{children:"Field"}),(0,d.jsx)(s.th,{children:"Type"}),(0,d.jsx)(s.th,{children:"Purpose"})]})}),(0,d.jsxs)(s.tbody,{children:[(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"currentFood"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"AacFood | null"})}),(0,d.jsx)(s.td,{children:"The current food the AAC user has selected as the target."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"scores"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Record<string, number>"})}),(0,d.jsx)(s.td,{children:"Player score map, updated via WebSocket."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"gameMode"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"GameMode | null"})}),(0,d.jsxs)(s.td,{children:["The game difficulty mode (",(0,d.jsx)(s.code,{children:"Easy"}),", ",(0,d.jsx)(s.code,{children:"Medium"}),", ",(0,d.jsx)(s.code,{children:"Hard"}),")."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"secondsLeft"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"number"})}),(0,d.jsx)(s.td,{children:"Countdown timer shown in sidebar."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"sessionId"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string | undefined"})}),(0,d.jsx)(s.td,{children:"Unique session ID from URL params."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"userId"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"string | undefined"})}),(0,d.jsx)(s.td,{children:"Current user ID from URL params."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"location"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Location"})}),(0,d.jsxs)(s.td,{children:["From ",(0,d.jsx)(s.code,{children:"useLocation()"}),"; contains user role (",(0,d.jsx)(s.code,{children:"Hippo"}),", ",(0,d.jsx)(s.code,{children:"AAC"}),", ",(0,d.jsx)(s.code,{children:"Spectator"}),") in ",(0,d.jsx)(s.code,{children:".state"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"navigate"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"ReturnType<typeof useNavigate>"})}),(0,d.jsx)(s.td,{children:"React Router navigation function."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"isSpectator"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"boolean"})}),(0,d.jsxs)(s.td,{children:[(0,d.jsx)(s.code,{children:"true"})," if the current user is a spectator (from location state)."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"phaserRef"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"React.RefObject<IRefPhaserGame | null>"})}),(0,d.jsxs)(s.td,{children:["Reference to Phaser game and scene (",(0,d.jsx)(s.code,{children:"{ game, scene }"}),"). Passed into ",(0,d.jsx)(s.code,{children:"<PhaserGame />"}),"."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"connectedUsers"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"{ userId, role, color? }[]"})}),(0,d.jsx)(s.td,{children:"List of all players in the current session."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"lastMessage"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"any"})}),(0,d.jsx)(s.td,{children:"Most recent message received over WebSocket."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"sendMessage"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"(msg: any) => void"})}),(0,d.jsx)(s.td,{children:"Sends data to the backend WebSocket server."})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"clearLastMessage"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"() => void"})}),(0,d.jsxs)(s.td,{children:["Clears ",(0,d.jsx)(s.code,{children:"lastMessage"})," to avoid duplicate handling."]})]}),(0,d.jsxs)(s.tr,{children:[(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"colors"})}),(0,d.jsx)(s.td,{children:(0,d.jsx)(s.code,{children:"Record<string, string>"})}),(0,d.jsx)(s.td,{children:"Maps each user ID to their assigned hippo color, for leaderboard use."})]})]})]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"join-on-mount",children:"JOIN on MOUNT"}),"\n",(0,d.jsx)(s.h3,{id:"useeffect---sessionid-userid-role",children:(0,d.jsx)(s.code,{children:"useEffect(() => {...}, [sessionId, userId, role])"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Joins the WebSocket session when the component mounts."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": None directly."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Requires valid ",(0,d.jsx)(s.code,{children:"sessionId"}),", ",(0,d.jsx)(s.code,{children:"userId"}),", and ",(0,d.jsx)(s.code,{children:"role"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"remote-player-movement-sync",children:"REMOTE PLAYER MOVEMENT SYNC"}),"\n",(0,d.jsx)(s.h3,{id:"useeffect---lastmessage-userid-clearlastmessage",children:(0,d.jsx)(s.code,{children:"useEffect(() => {...}, [lastMessage, userId, clearLastMessage])"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Updates remote player movement when a ",(0,d.jsx)(s.code,{children:"PLAYER_MOVE_BROADCAST"})," is received."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"lastMessage"}),": contains the payload with ",(0,d.jsx)(s.code,{children:"userId"}),", ",(0,d.jsx)(s.code,{children:"x"}),", ",(0,d.jsx)(s.code,{children:"y"}),"."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Scene must exist and support ",(0,d.jsx)(s.code,{children:"updateRemotePlayer()"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"game-mode-broadcast",children:"GAME MODE BROADCAST"}),"\n",(0,d.jsx)(s.h3,{id:"useeffect---lastmessage-clearlastmessage",children:(0,d.jsx)(s.code,{children:"useEffect(() => {...}, [lastMessage, clearLastMessage])"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Applies game mode settings when ",(0,d.jsx)(s.code,{children:"START_GAME_BROADCAST"})," is received."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),":","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsx)(s.li,{children:(0,d.jsx)(s.code,{children:"lastMessage.payload.mode: GameMode"})}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Scene must support ",(0,d.jsx)(s.code,{children:"applyModeSettings()"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"food-state-sync",children:"FOOD STATE SYNC"}),"\n",(0,d.jsx)(s.h3,{id:"useeffect---lastmessage-clearlastmessage-1",children:(0,d.jsx)(s.code,{children:"useEffect(() => {...}, [lastMessage, clearLastMessage])"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Handles multiple WebSocket message types:","\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"FOOD_STATE_UPDATE"}),": syncs food state via ",(0,d.jsx)(s.code,{children:"EventBus"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"AAC_TARGET_FOOD"}),": sets the target food in the scene and sidebar."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"REMOVE_FOOD"}),": deletes food object from scene."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.code,{children:"PLAYER_EFFECT_BROADCAST"}),": applies effects via ",(0,d.jsx)(s.code,{children:"EventBus"}),"."]}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": ",(0,d.jsx)(s.code,{children:"lastMessage"})," payload varies by type."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Scene must support relevant methods."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"fruit-eaten-local-emitted-from-phaser",children:"FRUIT EATEN LOCAL (EMITTED FROM PHASER)"}),"\n",(0,d.jsx)(s.h3,{id:"useeffect---sendmessage-sessionid",children:(0,d.jsx)(s.code,{children:"useEffect(() => {...}, [sendMessage, sessionId])"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Emits ",(0,d.jsx)(s.code,{children:"FRUIT_EATEN"})," to backend when triggered by the Phaser scene."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": ",(0,d.jsx)(s.code,{children:"instanceId"})," from ",(0,d.jsx)(s.code,{children:"EventBus"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Requires ",(0,d.jsx)(s.code,{children:"sessionId"})," and ",(0,d.jsx)(s.code,{children:"sendMessage"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None."]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"score-update-broadcast-eventbus",children:"SCORE UPDATE BROADCAST (EVENTBUS)"}),"\n",(0,d.jsx)(s.h3,{id:"useeffect---",children:(0,d.jsx)(s.code,{children:"useEffect(() => {...}, [])"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Updates the local scoreboard when ",(0,d.jsx)(s.code,{children:"scoreUpdate"})," is emitted from ",(0,d.jsx)(s.code,{children:"EventBus"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": ",(0,d.jsx)(s.code,{children:"{ scores }"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": None"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"timer-update-broadcast-eventbus",children:"TIMER UPDATE BROADCAST (EVENTBUS)"}),"\n",(0,d.jsx)(s.h3,{id:"useeffect----1",children:(0,d.jsx)(s.code,{children:"useEffect(() => {...}, [])"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Updates the timer when ",(0,d.jsx)(s.code,{children:"TIMER_UPDATE"})," is emitted from ",(0,d.jsx)(s.code,{children:"EventBus"}),"."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": ",(0,d.jsx)(s.code,{children:"time: number"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": Timer must be active"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"game-over--victory-navigation",children:"GAME OVER \u2192 VICTORY NAVIGATION"}),"\n",(0,d.jsx)(s.h3,{id:"useeffect---navigate-sessionid-scores-connectedusers",children:(0,d.jsx)(s.code,{children:"useEffect(() => {...}, [navigate, sessionId, scores, connectedUsers])"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Navigates to the Victory page when ",(0,d.jsx)(s.code,{children:"gameOver"})," is emitted."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": none"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": ",(0,d.jsx)(s.code,{children:"sessionId"})," must exist"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": Falls back to ",(0,d.jsx)(s.code,{children:"/"})," if ",(0,d.jsx)(s.code,{children:"sessionId"})," is missing"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{}),"\n",(0,d.jsx)(s.h2,{id:"set-edge-sync-with-backend",children:"SET EDGE SYNC WITH BACKEND"}),"\n",(0,d.jsx)(s.h3,{id:"useeffect---sendmessage-sessionid-userid-locationstaterole",children:(0,d.jsx)(s.code,{children:"useEffect(() => {...}, [sendMessage, sessionId, userId, location.state?.role])"})}),"\n",(0,d.jsxs)(s.ul,{children:["\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Purpose"}),": Sends ",(0,d.jsx)(s.code,{children:"SET_EDGE"})," to backend after ",(0,d.jsx)(s.code,{children:"edges-ready"})," is emitted from the scene."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Parameters"}),": ",(0,d.jsx)(s.code,{children:"{ sessionId, userId, edge }"})]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Pre-conditions"}),": User must not be a Spectator, and edge must be known."]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Returns"}),": void"]}),"\n",(0,d.jsxs)(s.li,{children:[(0,d.jsx)(s.strong,{children:"Exceptions"}),": None"]}),"\n"]}),"\n",(0,d.jsx)(s.hr,{})]})}function a(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,d.jsx)(s,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>c,x:()=>l});var d=n(96540);const i={},r=d.createContext(i);function c(e){const s=d.useContext(r);return d.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),d.createElement(r.Provider,{value:s},e.children)}}}]);