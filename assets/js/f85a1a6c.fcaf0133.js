"use strict";(self.webpackChunkcreate_project_docs=self.webpackChunkcreate_project_docs||[]).push([[6244],{21926:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>a,frontMatter:()=>i,metadata:()=>l,toc:()=>c});var d=s(74848),t=s(28453);const i={sidebar_position:1},o="Unit tests",l={id:"testing/unit-testing",title:"Unit tests",description:"Frontend testing is done via Vitest and React Testing Library.",source:"@site/docs/testing/unit-testing.md",sourceDirName:"testing",slug:"/testing/unit-testing",permalink:"/project-acc-hungry-hippos/docs/testing/unit-testing",draft:!1,unlisted:!1,editUrl:"https://github.com/Capstone-Projects-2025-Spring/project-acc-hungry-hippos/edit/main/documentation/docs/testing/unit-testing.md",tags:[],version:"current",lastUpdatedBy:"Jasmine",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"docsSidebar",previous:{title:"Test Procedures",permalink:"/project-acc-hungry-hippos/docs/category/test-procedures"},next:{title:"Integration tests",permalink:"/project-acc-hungry-hippos/docs/testing/integration-testing"}},r={},c=[{value:"AacInterface",id:"aacinterface",level:2},{value:"Handling Food Click",id:"handling-food-click",level:3},{value:"Navigate to Foods Grid",id:"navigate-to-foods-grid",level:3},{value:"Back to categories",id:"back-to-categories",level:3},{value:"Selected food indicator updates",id:"selected-food-indicator-updates",level:3},{value:"Game.ts",id:"gamets",level:2},{value:"Method: <code>setFoodKeys(keys: string[])</code>",id:"method-setfoodkeyskeys-string",level:3},{value:"Method: <code>addFoodManually(foodKey: string)</code>",id:"method-addfoodmanuallyfoodkey-string",level:3},{value:"Method: <code>spawnFood()</code>",id:"method-spawnfood",level:3},{value:"Method: <code>handleFoodCollision(hippoObj, foodObj)</code>",id:"method-handlefoodcollisionhippoobj-foodobj",level:3},{value:"Method: <code>update()</code>",id:"method-update",level:3}];function h(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",hr:"hr",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,t.R)(),...e.components};return(0,d.jsxs)(d.Fragment,{children:[(0,d.jsx)(n.h1,{id:"unit-tests",children:"Unit tests"}),"\n",(0,d.jsx)(n.p,{children:"Frontend testing is done via Vitest and React Testing Library."}),"\n",(0,d.jsxs)(n.table,{children:[(0,d.jsx)(n.thead,{children:(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.th,{children:"Student"}),(0,d.jsx)(n.th,{children:"Library"}),(0,d.jsx)(n.th,{children:"Why We Chose It"}),(0,d.jsx)(n.th,{children:"Key Features"}),(0,d.jsx)(n.th,{children:"Modules Covered"})]})}),(0,d.jsxs)(n.tbody,{children:[(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Kostandin Jorgji"}),(0,d.jsx)(n.td,{children:"Vitest & React Testing Library"}),(0,d.jsx)(n.td,{children:"Vite integration, fast TypeScript support, RTL mirrors how users interact with the app"}),(0,d.jsx)(n.td,{children:"userEvent & render"}),(0,d.jsx)(n.td,{children:"AacInterface.tsx, Foods.ts"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Omais Khan"}),(0,d.jsx)(n.td,{children:"Vitest"}),(0,d.jsx)(n.td,{children:"Works out-of-the-box with Vite + TypeScript"}),(0,d.jsx)(n.td,{children:"vi.fn(), isolated test logic"}),(0,d.jsx)(n.td,{children:"Game.ts"})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Student"}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Student"}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{})]}),(0,d.jsxs)(n.tr,{children:[(0,d.jsx)(n.td,{children:"Student"}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{}),(0,d.jsx)(n.td,{})]})]})]}),"\n",(0,d.jsx)(n.h1,{id:"frontend",children:"Frontend"}),"\n",(0,d.jsx)(n.h2,{id:"aacinterface",children:"AacInterface"}),"\n",(0,d.jsx)(n.h3,{id:"handling-food-click",children:"Handling Food Click"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Input / User Action","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Use taps a food button"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["Expected Result","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"selectedFood"})," state updated to the tapped food"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"onFoodSelected(food)"})," callback invoked"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"Audio.play()"})," called with the selected food.mp3"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"navigate-to-foods-grid",children:"Navigate to Foods Grid"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Input / User Action","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"User taps a category button"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["Expected Result","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"selectedCategory"})," state set to that fruit"]}),"\n",(0,d.jsx)(n.li,{children:"Food grid for that category rendered"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"back-to-categories",children:"Back to categories"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Input / User Action","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"While viewing foods grid, user taps the back button"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["Expected Result","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"selectedCategory"})," cleared"]}),"\n",(0,d.jsx)(n.li,{children:"Categiry grid reappears"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h3,{id:"selected-food-indicator-updates",children:"Selected food indicator updates"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:["Input / user Action","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"User taps a food"}),"\n"]}),"\n"]}),"\n",(0,d.jsxs)(n.li,{children:["Expected Result","\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsx)(n.li,{children:"Indicator shows the selected food"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.h2,{id:"gamets",children:"Game.ts"}),"\n",(0,d.jsxs)(n.h3,{id:"method-setfoodkeyskeys-string",children:["Method: ",(0,d.jsx)(n.code,{children:"setFoodKeys(keys: string[])"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Defines which food keys are allowed to be spawned."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Test Case:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Input:"})," ",(0,d.jsx)(n.code,{children:"['apple', 'pizza']"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Expected Result:"})," ",(0,d.jsx)(n.code,{children:"foodKeys"})," field is updated with these values."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h3,{id:"method-addfoodmanuallyfoodkey-string",children:["Method: ",(0,d.jsx)(n.code,{children:"addFoodManually(foodKey: string)"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Manually adds a food item to the game (e.g. from AAC)."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Test Case:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Input:"})," ",(0,d.jsx)(n.code,{children:"'apple'"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Mocked:"})," ",(0,d.jsx)(n.code,{children:"foods.create"}),", ",(0,d.jsx)(n.code,{children:"setScale"}),", ",(0,d.jsx)(n.code,{children:"setVelocityY"}),", ",(0,d.jsx)(n.code,{children:"setBounce"}),", ",(0,d.jsx)(n.code,{children:"setCollideWorldBounds"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Expected Result:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.code,{children:"foods.create()"})," called with a lane ",(0,d.jsx)(n.code,{children:"x"})," and ",(0,d.jsx)(n.code,{children:"'apple'"})]}),"\n",(0,d.jsx)(n.li,{children:"All config methods called with correct values"}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h3,{id:"method-spawnfood",children:["Method: ",(0,d.jsx)(n.code,{children:"spawnFood()"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Automatically spawns food from a random key and lane."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Test Case:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Precondition:"})," ",(0,d.jsx)(n.code,{children:"foodKeys = ['apple']"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Mocked:"})," ",(0,d.jsx)(n.code,{children:"Phaser.Utils.Array.GetRandom"}),", ",(0,d.jsx)(n.code,{children:"foods.create"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Expected Result:"})," ",(0,d.jsx)(n.code,{children:"foods.create()"})," called with valid food key and lane"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h3,{id:"method-handlefoodcollisionhippoobj-foodobj",children:["Method: ",(0,d.jsx)(n.code,{children:"handleFoodCollision(hippoObj, foodObj)"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Removes food when it overlaps with the hippo."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Test Case:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Input:"})," a food object with ",(0,d.jsx)(n.code,{children:".destroy()"})," mocked"]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Expected Result:"})," ",(0,d.jsx)(n.code,{children:"destroy()"})," called on food"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,d.jsx)(n.hr,{}),"\n",(0,d.jsxs)(n.h3,{id:"method-update",children:["Method: ",(0,d.jsx)(n.code,{children:"update()"})]}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Purpose:"})," Removes any food object that touches the ground."]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Test Case:"}),"\n",(0,d.jsxs)(n.ul,{children:["\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Input:"})," a group of food objects, some with ",(0,d.jsx)(n.code,{children:"body.blocked.down = true"})]}),"\n",(0,d.jsxs)(n.li,{children:[(0,d.jsx)(n.strong,{children:"Expected Result:"})," Only those with ",(0,d.jsx)(n.code,{children:"blocked.down = true"})," are destroyed"]}),"\n"]}),"\n"]}),"\n"]})]})}function a(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,d.jsx)(n,{...e,children:(0,d.jsx)(h,{...e})}):h(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>l});var d=s(96540);const t={},i=d.createContext(t);function o(e){const n=d.useContext(i);return d.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),d.createElement(i.Provider,{value:n},e.children)}}}]);